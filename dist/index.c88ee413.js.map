{"mappings":"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","sources":["public/logs.js"],"sourcesContent":["const mymap = L.map('checkinMap').setView([-24.801233, 132.945510], 5);\n\nconst attribution =\n  '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors';\nconst tileUrl = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n//const tileUrl = 'https://{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png';\n//const tileUrl = 'https://{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png';\n\n  googleTerrain = L.tileLayer('http://{s}.google.com/vt/lyrs=p&x={x}&y={y}&z={z}',{\n    maxZoom: 20,\n    subdomains:['mt0','mt1','mt2','mt3']\n});\n\nconst tiles = L.tileLayer(tileUrl, { attribution });\ntiles.addTo(mymap);\n\nconst latMinSL = document.getElementById(\"latMin\");\nconst latMaxSL = document.getElementById(\"latMax\");\nconst lonMinSL = document.getElementById(\"lonMin\");\nconst lonMaxSL = document.getElementById(\"lonMax\");\nvar bounds = [[latMaxSL.value, lonMaxSL.value] , [latMinSL.value, lonMinSL.value]];\nvar boundingBox = L.rectangle(bounds, {color: \"#ff7800\", weight: 1});\n\nfunction resetBoundingBox(){\n  mymap.removeLayer(boundingBox);\n  bounds = [[latMinSL.value, lonMinSL.value], [latMaxSL.value, lonMaxSL.value]];\n  boundingBox = L.rectangle(bounds, {color: \"#ff7800\", weight: 1});\n  mymap.addLayer(boundingBox);\n};\n\nlatMinSL.addEventListener(\"change\", function() {\n  resetBoundingBox();\n});\n\nlatMaxSL.addEventListener(\"change\", function() {\n  resetBoundingBox();\n});\n\nlonMinSL.addEventListener(\"change\", function() {\n  resetBoundingBox();\n});\n\nlonMaxSL.addEventListener(\"change\", function() {\n  resetBoundingBox();\n});\n\n\n\nconst minTempSL = document.getElementById(\"minTemp\");\nconst maxTempSL = document.getElementById(\"maxTemp\");\nvar minTemp;\nvar maxTemp;\n\nminTempSL.addEventListener(\"change\", function(){\n  minTemp= minTempSL.value;\n  console.log(\"Min temp: \" +  minTemp);\n});\n\nmaxTempSL.addEventListener(\"change\", function(){\n  maxTemp=maxTempSL.value;\n  console.log(\"Max temp: \" + maxTemp);\n});\n\nconst earliestDate = document.getElementById(\"start\");\nconst latestDate = document.getElementById(\"end\");\n\nearliestDate.max = new Date().toISOString().substring(0, 10);\nlatestDate.value = new Date().toISOString().substring(0, 10);\nlatestDate.max = new Date().toISOString().substring(0, 10);\n\n\nfunction isSampleInDateRange( dateStamp ) {\n  // format: mm.dd.yyyy;\n  var minDate = earliestDate.value.getTime();\n  var maxDate = latestDate.value.getTime();\n \n\n  return minDate < dateStamp && dateStamp < maxDate;\n};\n\ngetData();\n\nvar markers = L.markerClusterGroup();\n\nasync function getData() {\n  var counter = 0;\n  const response = await fetch('/api');\n  const data = await response.json();\n  \n  console.log(Object.keys(data).length)\n  for (item of data) {\n    console.log(\"Getting data : \" + counter + \" \" + item);\n    counter ++;\n   // if(item.coord.lat > latMinSL.value && item.coord.lat < latMaxSL.value){\n     console.log(\"Min temp: \" + minTemp + \" Max Temp: \" + maxTemp + \" Actual temp: \" + item.main.temp)\n     // if(item.main.temp > minTemp && item.main.temp < maxTemp){\n        const marker = L.marker([item.coord.lat, item.coord.lon]);\n        marker.bindPopup(\"Location:\" + item.name + \"<br/> Weather :\" + item.weather[0].description + \"<br/> Date:\" + item.dateName + \"<br/> Temperature :\" + item.main.temp + \"&deg; C.<br/><br/><audio controls><source src=\\\"/audiofiles/\" + item.timeStamp +\".wav\\\"> type=\\\"audio/wave\\\" </audio>\" )\n        markers.addLayer(marker);\n     // }\n  //  }\n\n    \n  }\n  console.log(data);\n  mymap.addLayer(markers);\n};\n\n\n"],"names":[],"version":3,"file":"index.c88ee413.js.map","sourceRoot":"/__parcel_source_root/"}