{"mappings":"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","sources":["public/logs.js"],"sourcesContent":["const mymap = L.map(\"checkinMap\").setView([-24.801233, 132.94551], 5);\n\nconst attribution =\n  '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors';\nconst tileUrl = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\";\n\ngoogleTerrain = L.tileLayer(\n  \"http://{s}.google.com/vt/lyrs=p&x={x}&y={y}&z={z}\",\n  {\n    maxZoom: 20,\n    subdomains: [\"mt0\", \"mt1\", \"mt2\", \"mt3\"],\n  }\n);\n\nconst tiles = L.tileLayer(tileUrl, { attribution });\ntiles.addTo(mymap);\n\nconst latMinSL = document.getElementById(\"latMin\");\nconst latMaxSL = document.getElementById(\"latMax\");\nconst lonMinSL = document.getElementById(\"lonMin\");\nconst lonMaxSL = document.getElementById(\"lonMax\");\nvar bounds = [\n  [latMaxSL.value, lonMaxSL.value],\n  [latMinSL.value, lonMinSL.value],\n];\nvar boundingBox = L.rectangle(bounds, { color: \"#ff7800\", weight: 1 });\n\nfunction resetBoundingBox() {\n  mymap.removeLayer(boundingBox);\n  bounds = [\n    [latMinSL.value, lonMinSL.value],\n    [latMaxSL.value, lonMaxSL.value],\n  ];\n  boundingBox = L.rectangle(bounds, { color: \"#ff7800\", weight: 1 });\n  mymap.addLayer(boundingBox);\n}\n\nlatMinSL.addEventListener(\"change\", function () {\n  resetBoundingBox();\n});\n\nlatMaxSL.addEventListener(\"change\", function () {\n  resetBoundingBox();\n});\n\nlonMinSL.addEventListener(\"change\", function () {\n  resetBoundingBox();\n});\n\nlonMaxSL.addEventListener(\"change\", function () {\n  resetBoundingBox();\n});\n\nconst minTempSL = document.getElementById(\"minTemp\");\nconst maxTempSL = document.getElementById(\"maxTemp\");\nlet minTemp = 0;\nlet maxTemp = 40;\n\nminTempSL.addEventListener(\"change\", function () {\n  minTemp = minTempSL.value;\n  getData();\n  console.log(\"Min temp: \" + minTemp);\n});\n\nmaxTempSL.addEventListener(\"change\", function () {\n  maxTemp = maxTempSL.value;\n  getData();\n  console.log(\"Max temp: \" + maxTemp);\n});\n\nconst earliestDate = document.getElementById(\"start\");\nconst latestDate = document.getElementById(\"end-date\");\n\nearliestDate.max = new Date().toISOString().substring(0, 10);\nlatestDate.value = new Date().toISOString().substring(0, 10);\nlatestDate.max = new Date().toISOString().substring(0, 10);\n\nfunction isSampleInDateRange(dateStamp) {\n  // format: mm.dd.yyyy;\n  var minDate = earliestDate.value.getTime();\n  var maxDate = latestDate.value.getTime();\n\n  return minDate < dateStamp && dateStamp < maxDate;\n}\n\ngetData();\n\nasync function getData() {\n  var markers = L.markerClusterGroup();\n\n  mymap.removeLayer(markers);\n\n  var counter = 0;\n  const response = await fetch(\"/api\");\n  const data = await response.json();\n\n  console.log(Object.keys(data).length);\n  for (item of data) {\n    console.log(\"Getting data : \" + counter + \" \" + item);\n    counter++;\n    // if(item.coord.lat > latMinSL.value && item.coord.lat < latMaxSL.value){\n    //console.log(\"Min temp: \" + minTemp + \" Max Temp: \" + maxTemp + \" Actual temp: \" + item.main.temp)\n    if (item.main.temp > minTemp && item.main.temp < maxTemp) {\n      const marker = L.marker([item.coord.lat, item.coord.lon]);\n      marker.bindPopup(\n        \"Location:\" +\n          item.name +\n          \"<br/> Weather :\" +\n          item.weather[0].description +\n          \"<br/> Date:\" +\n          item.dateName +\n          \"<br/> Temperature :\" +\n          item.main.temp +\n          '&deg; C.<br/><br/><audio controls><source src=\"/audiofiles/' +\n          item.timeStamp +\n          '.wav\"> type=\"audio/wave\" </audio>'\n      );\n      markers.addLayer(marker);\n    }\n    //  }\n  }\n  console.log(data);\n  mymap.addLayer(markers);\n}\n"],"names":[],"version":3,"file":"index.c88ee413.js.map","sourceRoot":"/__parcel_source_root/"}